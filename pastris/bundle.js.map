{"version":3,"sources":["webpack:///webpack/bootstrap 8c47ab6cb13091c041ac","webpack:///./pastris/game.js","webpack:///./pastris/piece.js","webpack:///./pastris/grid.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACrHA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;;;AAGL;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;AC7EA;;AAEA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;AACA;;AAEA,qFAAgC,WAAW;AAC3C;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA","file":"./pastris/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8c47ab6cb13091c041ac","import Grid from \"./grid.js\";\nimport Piece from \"./piece.js\";\n\n\nclass Game {\n  constructor () {\n    this.canvas = document.getElementById('canvas');\n    this.canvas.setAttribute(\"width\", 200);\n    this.canvas.setAttribute(\"height\", 420);\n    this.context = canvas.getContext('2d');\n\n    this.images = this.loadImages();\n    setTimeout(() => this.startNewGame(), 100);\n\n  }\n\n  startNewGame() {\n\n    this.context.fillStyle = '#ffffff';\n    this.context.fillRect(0, 0, canvas.width, canvas.height);\n\n    this.field = new Grid(10, 21, this.context, this.canvas);\n    this.playedPiece = Piece.newPlayedPiece();\n    this.deleteEventListener();\n    this.setEventListener();\n    this.paused = false;\n    this.restart = false;\n    this.score = 0;\n\n    this.dropCounter = 0;\n    this.fallingInterval = 500;\n    this.previousTime = 0;\n    this.update();\n  }\n\n  loadImages() {\n    const imageSources = [\"images/banana_bread.png\", \"images/cherry_cake.png\", \"images/croissant.png\", \"images/cupcake.png\", \"images/donut.png\", \"images/ice_cream.png\", \"images/lolipop.png\"];\n    return imageSources.map(source => {\n      const img = new Image();\n      img.src = source;\n      return img;\n    });\n\n  }\n\n\n  update(time = 0) {\n    // const delta = time - this.previousTime;\n    // // this.previousTime = time;\n    // //\n    // // this.dropCounter += delta;\n    // // if (this.dropCounter > this.fallingInterval) {\n    // //\n    // //   this.playedPiece = this.field.hitBottom(this.playedPiece);\n    // //   this.dropCounter = 0;\n    // // }\n    if (this.restart) {\n      this.startNewGame();\n      this.restart = false;\n    }\n    if (!this.paused) {\n      const delta = time - this.previousTime;\n      this.previousTime = time;\n\n      this.dropCounter += delta;\n      if (this.dropCounter > this.fallingInterval) {\n\n        this.playedPiece = this.field.hitBottom(this.playedPiece);\n        this.dropCounter = 0;\n      }\n      this.field.draw(this.playedPiece, this.images);\n    }\n    requestAnimationFrame(this.update.bind(this));\n  }\n\n  onKeydown (e) {\n    if (e.key === \"ArrowDown\" && (!this.paused)) {\n      this.playedPiece = this.field.hitBottom(this.playedPiece);\n    } else if (e.key === \"ArrowLeft\" && !this.paused) {\n      this.playedPiece.pos.x --;\n      if (this.field.collide(this.playedPiece)) {\n        this.playedPiece.pos.x ++;\n      }\n    } else if (e.key === \"ArrowRight\" && !this.paused) {\n      this.playedPiece.pos.x ++;\n      if (this.field.collide(this.playedPiece)) {\n        this.playedPiece.pos.x --;\n      }\n    } else if (e.key === \"ArrowUp\" && !this.paused) {\n      let originalPiece = this.playedPiece.form.map(el => el.slice());\n      this.playedPiece.form = this.field.rotate(this.playedPiece.form);\n      if (this.field.collide(this.playedPiece)) {\n        this.playedPiece.form = originalPiece;\n      }\n    } else if (e.key === \"p\") {\n      this.paused = this.paused ? false : true;\n    } else if (e.key === \"r\") {\n      this.restart = true;\n    }\n  }\n\n  setEventListener() {\n    this.onKeydown = this.onKeydown.bind(this);\n    document.addEventListener('keydown', this.onKeydown);\n  }\n\n  deleteEventListener () {\n    // this.onKeydown = this.onKeydown.bind(this);\n\n    document.removeEventListener('keydown', this.onKeydown);\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let game1 = new Game();\n    }\n  );\n// game1.startNewGame();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./pastris/game.js\n// module id = 0\n// module chunks = 0","const pieceColors = [\"#2df2f0\", \"#0000f0\", \"#eea006\", \"#f0f409\", \"#2ef604\", \"#9c00f0\", \"#ed0005\"];\nconst blockSize = 20;\n\n\nconst letterShapes = \"IJLOSTZ\";\n\n\nconst Piece = {\n\n    buildPiece: (letter) => {\n      if (letter === \"I\") {\n        return [\n          [0, 1, 0, 0],\n          [0, 1, 0, 0],\n          [0, 1, 0, 0],\n          [0, 1, 0, 0]\n        ];\n      } else if (letter === \"J\") {\n        return [\n          [0, 2, 0],\n          [0, 2, 0],\n          [2, 2, 0]\n        ];\n      } else if (letter === \"L\") {\n        return [\n          [0, 3, 0],\n          [0, 3, 0],\n          [0, 3, 3]\n        ];\n      } else if (letter === \"O\") {\n        return [\n          [4, 4],\n          [4, 4]\n        ];\n      } else if (letter === \"S\") {\n        return [\n          [0, 0, 0],\n          [0, 5, 5],\n          [5, 5, 0]\n        ];\n      } else if (letter === \"T\") {\n        return [\n          [0, 0, 0],\n          [6, 6, 6],\n          [0, 6, 0]\n        ];\n      } else if (letter === \"Z\") {\n        return [\n          [0, 0, 0],\n          [7, 7, 0],\n          [0, 7, 7]\n        ];\n      }\n    },\n\n    drawPiece: (piece, move, context, images) => {\n      piece.forEach((row, y) => {\n        row.forEach((val, x) => {\n          if (val !== 0) {\n            context.drawImage(images[val-1], blockSize*(x+move.x), blockSize*(y+move.y), blockSize, blockSize);\n            // context.fillRect(blockSize * (x + move.x), blockSize * (y + move.y), blockSize, blockSize);\n          }\n        });\n      });\n    },\n\n\n    newPlayedPiece: () => {\n        return {\n          pos: {x: 3, y: 0},\n          form: Piece.buildPiece(letterShapes[Math.floor(Math.random() * 7)])\n        };\n    }\n\n\n};\n\nexport default Piece;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./pastris/piece.js\n// module id = 2\n// module chunks = 0","import Piece from \"./piece.js\";\n\nclass Grid {\n  constructor(width, height, context, canvas) {\n      let theGrid = [];\n      for (let i = 0; i < height; i ++ ) {\n        theGrid.push(new Array(width).fill(0));\n      }\n      this.grid = theGrid;\n\n    this.canvas = canvas;\n    this.context = context;\n\n}\n\n  destroyRow() {\n    let fullRows = [];\n    this.grid.forEach((row, rowNumber) => {\n      if (row.every(val => val !== 0)) {\n        fullRows.push(rowNumber);\n      }\n    });\n    if (fullRows.length > 0 ) {\n      fullRows.forEach(rowNum => {\n        this.grid.splice(rowNum, 1);\n        this.grid.unshift(new Array(10).fill(0));\n      });\n    }\n  }\n\n  isGameOver() {\n    if (this.grid[0].some(el => el !== 0)) {\n      console.log(\"Game Over\");\n      this.grid = this.grid.map(row => {\n        return row.map(value => 0);\n      });\n    }\n  }\n\n\n  draw(playedPiece, images) {\n    this.context.fillStyle = '#4b1a05';\n    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    Piece.drawPiece(this.grid, {x: 0, y: 0}, this.context, images);\n    Piece.drawPiece(playedPiece.form, playedPiece.pos, this.context, images);\n  }\n\n\n  mergePiece(playedPiece) {\n    playedPiece.form.forEach((row, y) => {\n      row.forEach((val, x) => {\n\n        if (val !== 0) {\n          this.grid[y+playedPiece.pos.y][x+playedPiece.pos.x] = val;\n        }\n      });\n    });\n  }\n\n  hitBottom(playedPiece) {\n    playedPiece.pos.y ++;\n    if (this.collide(playedPiece)) {\n      playedPiece.pos.y --;\n      this.mergePiece(playedPiece);\n      playedPiece.pos.y = 0;\n      playedPiece = Piece.newPlayedPiece();\n    }\n    this.destroyRow();\n    this.isGameOver();\n    return playedPiece;\n  }\n\n\n    collide(playedPiece) {\n      const form = playedPiece.form;\n      const pos = playedPiece.pos;\n      for (let y = 0; y < form.length; y++) {\n        for (let x = 0; x < form[y].length; x++) {\n          if (form[y][x] !== 0 &&\n              (this.grid[y + pos.y] &&\n              this.grid[y+pos.y][x+pos.x]) !== 0) {\n                return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    rotate(piece) {\n      piece = piece.reverse();\n      let result = new Array(piece[0].length).fill(true).map(el => []);\n\n      for (let i = 0; i < piece.length; i++) {\n        for (let j = 0; j < piece[0].length; j++) {\n          result[j].push(piece[i][j]);\n        }\n      }\n      return result;\n    }\n\n\n\n}\n\nexport default Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./pastris/grid.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}